<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 
	이 영역에 SQL문에 맞는 태그를 사용하여 기술한다.
	
	사용할 수 있는 기본적인 태그들
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	
	1) id속성 : 해당 쿼리를 호출할 때 namespace값과 연결하여 사용하는 이름
	2) parameterType속성 : SQL문에 사용될 데이터가 들어있는 객체타입을 지정한다.
					   (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	3) resultType속성 : select문을 실행한 결과를 담을 객체타입을 지정한다.
					   (보통 VO클래스나 자바의 자료형이름을 사용한다.)
	4) resultMap속성 : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에 적절한 매핑을
					위해 사용한다.
	 -->

	<insert id="insert" parameterType="kr.or.ddit.member.vo.MemberVO">
		
		insert into mymember 
		( mem_id, mem_name, mem_tel, mem_addr )
		values ( #{memId}, #{memName}, #{memTel}, #{memAddr} ) 
		
	</insert>
	
	<update id="update" parameterType="kr.or.ddit.member.vo.MemberVO">
		
		update mymember
		set mem_name = #{memName}, mem_tel = #{memTel}, mem_addr = #{memAddr} 
		where mem_id = #{memId}
		
	</update>
	
	<delete id="delete" >
	
		delete from mymember where mem_id = #{memId}
	
	</delete>
	
	<select id="getAll" resultType="kr.or.ddit.member.vo.MemberVO">
	
		select mem_id	as memId
			  ,mem_name	as memName
			  ,mem_tel	as memTel
			  ,mem_addr	as memAddr
		from mymember
				
	</select>
	
	<select id="get" resultType="kr.or.ddit.member.vo.MemberVO">
	
		select mem_id	as memId
			  ,mem_name	as memName
			  ,mem_tel	as memTel
			  ,mem_addr	as memAddr
		from mymember
		where mem_id = #{memId}
	
	</select>
	
	<select id="check" resultType="int">
	
		select count(*) as cnt 
		from mymember 
		where mem_id = #{memId}
	
	</select>
	
	<resultMap type="kr.or.ddit.member.vo.MemberVO" id="memMap">
		<result property="memId" column="mem_id"/>
		<result property="memName" column="mem_name"/>
		<result property="memTel" column="mem_tel"/>
		<result property="memAddr" column="mem_addr"/>
	</resultMap>
	
	<select id="search" resultMap="memMap">
	
		select * from mymember where 1=1
		
		<if test="memId != null and memId != ''">
			and mem_id = #{memId}
		</if> 
		<if test="memName != null and memName != ''">
			and mem_name = #{memName}
		</if> 
		<if test="memTel != null and memTel != ''">
			and mem_tel = #{memTel}
		</if> 
		<if test="memAddr != null and memAddr != ''">
			and mem_addr like '%' || #{memAddr} || '%'
		</if> 
		
	</select>
	
</mapper>